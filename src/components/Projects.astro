---
import type { TLanguage } from '@/i18n';
import { getCollection } from 'astro:content';

type TProps = {
  lang: TLanguage;
  type: 'impl' | 'rd' | 'part';
};

const { lang, type } = Astro.props as TProps;

const langSpecificProjects = await getCollection(
  'projects',
  ({ id, data }) => id.startsWith(`${lang}/`) && data.type === type,
);

langSpecificProjects.sort((o1, o2) => o1.data.index - o2.data.index);

function getLang(slug: string): string {
  const lang = slug.substring(0, 2);
  return `/${lang}/project/${slug.substring(3)}`;
}
---

<ul>
  {
    langSpecificProjects.map((project) => (
      <li>
        <a href={getLang(project.slug)} class="projects__link">
          {project.data.title}
        </a>
      </li>
    ))
  }
</ul>

<style lang="scss">
  .projects {
    &__link {
      margin: 5px;
    }
  }
</style>
